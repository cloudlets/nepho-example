#!/bin/bash
#
# This configure hook assumes Puppet is the configuration management system, and
# kicks off two Puppet runs from a standard location.
#
prog="configure"

set -e
export PATH=/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin
export TMPDIR=/var/tmp

n_payload_dir=${NEPHO_NephoPayloadDir-"/var/lib/nepho"}
n_log_dir=${NEPHO_NephoLogDir-"/var/log/nepho"}
puppet_dir="${n_payload_dir}/puppet"
hiera_dir="${n_payload_dir}/hiera"

mkdir -p ${n_log_dir}
log="${n_log_dir}/${prog}.log"

# Pretty print informational and error messages
function message() {
  case $1 in
    fail ) echo -e "\n\033[0m${prog}: \033[1;31m${2}\033[0m" ;;
    info ) echo -e "\n\033[0m${prog}: \033[1;34m${2}\033[0m" ;;
  esac

  echo "  [${1}] ${2}" >> "${log}"
}

function run_librarian() {
  if [[ -s ${puppet_dir}/Puppetfile ]]; then
    message info "Running librarian-puppet to download Puppet modules"
    pushd "${puppet_dir}" >/dev/null
    HOME=/root LIBRARIAN_PUPPET_PATH=/etc/puppet/modules librarian-puppet install >> "${log}"
    popd >/dev/null
  else
    message info "No Puppetfile found, skipping librarian-puppet"
  fi
}

function run_puppet() {
  pushd "$puppet_dir" >/dev/null
  if [[ -f manifests/init.pp && -r manifests/init.pp ]]; then
    puppet apply \
      --modulepath /etc/puppet/modules:site \
      --manifestdir manifests \
      --templatedir templates \
      --logdest console --logdest "${n_log_dir}/puppet.$(date '+%F %T').log" \
      manifests/init.pp
  fi
  popd >/dev/null
}

# Make sure we are in the directory of this script
cd $(dirname "${0}")

message info "Beginning run at $(date '+%F %T')"

run_librarian
message info "Beginning first Puppet run"
run_puppet
message info "Beginning second Puppet run"
run_puppet

message info "Run complete at $(date '+%F %T')"

# vim: set ft=sh ts=2 sw=2 ei:
